version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.15
  coveralls: coveralls/coveralls@1.0.6

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: /noop-.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

jobs:
  build:
    docker:
      - image: 005030621348.dkr.ecr.us-east-1.amazonaws.com/mailejoe/mailejoe-api-ci:1.0.0
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
      - image: postgres:14
        environment:
          POSTGRES_USER: mjadmin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mailejoe
          TZ: America/Chicago
          PGTZ: America/Chicago

    working_directory: ~/mailejoe
    environment:
      TZ: 'America/Chicago'

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: npm install
      - run:
          name: Run tests
          command: npm run test:cov
          environment:
            DB_PORT: 5432
      - run:
          name: lint the code
          no_output_timeout: 30m
          command: npm run lint
      - coveralls/upload

  deploy:
    docker:
      - image: 005030621348.dkr.ecr.us-east-1.amazonaws.com/mailejoe/mailejoe-api-ci:1.0.0
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
        environment:
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_DEFAULT_REGION: us-east-1

    working_directory: ~/mailejoe

    steps:
      - checkout
      - run: npm install
      - run:
          name: Deploy the migrations
          no_output_timeout: 30m
          command: |
            cd ~/mailejoe/lambda
            echo "Intalling Migration Dependencies"
            npm install --production
            echo "Zip Code"
            zip migrate.zip migrate.js ../migrations ../src/entities ./node_modules
            echo "Copy Code to S3"
            CODE_BUCKET=$(aws cloudformation describe-stacks --stack-name mailejoe-buckets | jq -r '.Stacks[0].Outputs[] | select(.OutputKey=="CodeAssetsBucketName") | .OutputValue')
            VERSION=$(cat package.json | jq -r '.version')
            aws s3 cp ./migrate.zip s3://$CODE_BUCKET/mailejoe-api/migrations-$VERSION.zip
